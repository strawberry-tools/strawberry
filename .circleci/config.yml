version: 2.1

orbs:
  codecov: codecov/codecov@4.0
  go: circleci/go@1.11
  win: circleci/windows@2.4

workflows:
  main-wf:
    jobs:
      - generic-tests
      - unit-tests
      - release
      - release-on-macos
  release-wf:
    jobs:
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
          context: goreleaser-ctx
      - release-on-macos:
          requires:
            - release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
          context: goreleaser-ctx

executors:
  go:
    docker:
      - image: cimg/go:1.22-node
    resource_class: large

jobs:
  generic-tests:
    docker:
      - image: cimg/base:2024.01
    steps:
      - checkout
      - run:
          name: "Fork Tests"
          command: ./scripts/fork-tests.sh
  unit-tests:
    executor: go
    working_directory: "~/strawberry/sb"
    environment:
      GOTESTSUM_JUNITFILE: "junit/unit-tests-linux.xml"
    steps:
      - checkout:
          path: ".."
      - run:
          name: "Install Dependencies"
          command: |
            curl -sSL "https://github.com/magefile/mage/releases/download/v1.15.0/mage_1.15.0_Linux-64bit.tar.gz" | sudo tar -xz --no-same-owner -C /usr/local/bin mage
            mage --version
            mkdir -p ~/bin
            curl -sSL "https://github.com/sass/dart-sass/releases/download/1.72.0/dart-sass-1.72.0-linux-x64.tar.gz" | tar -xz --strip-components=1 -C ~/bin
            sass --version
      - run:
          name: "Generate Go Test Cache Timestamp"
          command: ../scripts/timestamp-generator.sh
      # Load Go module cache
      - go/load-cache
      # Load Go test cache
      - restore_cache:
          keys:
          - go-test-cache-v1-{{ .Branch }}
          - go-test-cache-v1-
      - go/mod-download
      - run:
          name: "Run Tests & Coverage"
          command: |
            mkdir junit
            mage -v check
      - codecov/upload
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit/unit-tests-linux.xml
      # Save Go module cache
      - go/save-cache
      # Save Go test cache
      - save_cache:
          key: go-test-cache-v1-{{ .Branch }}
          paths:
            - "/home/circleci/.cache/go-build"
      - run:
          name: "Build Binary"
          command: |
            mage -v build
            ./strawberry version
  release:
    executor: go
    working_directory: "~/strawberry"
    steps:
      - checkout
      - run:
          name: "Install Deps"
          command: sudo apt-get update && sudo apt-get install mingw-w64
      - run:
          name: "Install GoReleaser"
          command: |
            curl -sSL "https://github.com/goreleaser/goreleaser/releases/download/v1.25.1/goreleaser_Linux_x86_64.tar.gz" | sudo tar -xz -C /usr/local/bin goreleaser
            goreleaser --version
            cd sb && go mod tidy
      - run:
          name: "Build Snapshot or Release"
          command: |
            cd sb
            if [ -z "${CIRCLE_TAG}" ]; then
              goreleaser build --config=.goreleaser.yml --skip-validate --rm-dist --snapshot
            else
              goreleaser release --config=.goreleaser.yml
            fi

            echo "Some information about this binary built by GoReleaser:"
            echo "======================================================="
            ls -lah dist/*/strawberry
            echo ""
            #dist/*/strawberry version --type=detailed
            dist/*/strawberry version
      - persist_to_workspace:
          root: "./sb"
          paths:
            - "dist"
  release-on-macos:
    macos:
      xcode: 15.3.0
    working_directory: "~/strawberry"
    steps:
      - checkout
      - go/install:
          version: "1.22.2"
      - run:
          name: "Install GoReleaser"
          command: |
            curl -sSL "https://github.com/goreleaser/goreleaser/releases/download/v1.25.1/goreleaser_Darwin_all.tar.gz" | sudo tar -xz -C /usr/local/bin goreleaser
            goreleaser --version
            cd sb && go mod tidy
      - run:
          name: "Build Snapshot or Release"
          command: |
            cd sb
            if [[ $CIRCLE_TAG == "" ]]; then
              goreleaser build --config=.goreleaser.macos.yml --skip-validate --rm-dist --snapshot
            else
              goreleaser release --config=.goreleaser.macos.yml
            fi

            echo "Some information about this binary built by GoReleaser:"
            echo "======================================================="
            ls -lah dist/*/strawberry
            echo ""
            #dist/*/strawberry version --type=detailed
            dist/*/strawberry version
